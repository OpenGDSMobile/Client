{"version":3,"sources":["gulp-jsdoc.js"],"names":[],"mappings":"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","file":"gulp-jsdoc.js","sourcesContent":["import map from 'map-stream';\nimport tmp from 'tmp';\nimport fs from 'fs';\nimport path from 'path';\nimport gutil from 'gulp-util';\nimport Promise from 'bluebird';\nlet os = require('os').type();\n\nlet debug = require('debug')('gulp-jsdoc3');\n\n/**\n * @callback gulpDoneCallback\n */\n\n/**\n * A wrapper around jsdoc cli.\n *\n * This function collects all filenames. Then runs:\n * ```jsdoc -c config -t node_modules/ink-docstrap/template gulpFile1 gulpFile2```\n * @example\n * gulp.src(['README.md', 'src/*.js']), {read: false}).pipe(\n *     jsdoc(options, cb)\n * );\n *\n * @param {Object} [config=require('./jsdocConfig.json')]\n * @param {gulpDoneCallback} done\n * @returns {*|SignalBinding}\n */\nexport function jsdoc(config, done) {\n    let files = [];\n    let jsdocConfig;\n\n    // User just passed callback\n    if (arguments.length === 1 && typeof config === 'function') {\n        done = config;\n        config = undefined;\n    }\n\n    // Prevent some errors\n    if (typeof done !== 'function') {\n        done = function () {\n        };\n    }\n\n    jsdocConfig = config || require('./jsdocConfig.json');\n\n    debug('Config:\\n' + JSON.stringify(jsdocConfig, undefined, 2));\n\n    return map(function (file, callback) {\n        files.push(file.path);\n        callback(null, file);\n    }).on('end', function () {\n        // We use a promise to prevent multiple dones (normal cause error then close)\n        new Promise(function (resolve, reject) {\n            if (files.length === 0) {\n                const errMsg = 'JSDoc Error: no files found to process';\n                gutil.log(gutil.colors.red(errMsg));\n                gutil.beep();\n                reject(new Error(errMsg));\n            }\n\n            const tmpobj = tmp.fileSync();\n            debug('Documenting files: ' + files.join(' '));\n            fs.writeFile(tmpobj.name, JSON.stringify(jsdocConfig), 'utf8', function (err) {\n                // We couldn't write the temp file\n                if (err) {\n                    reject(err);\n                }\n\n                const spawn = require('child_process').spawn,\n                    cmd = require.resolve('jsdoc/jsdoc.js'), // Needed to handle npm3 - find the binary anywhere\n                    inkdocstrap = path.dirname(require.resolve('ink-docstrap'));\n\n                let args = ['-c', tmpobj.name];\n\n                // Config + ink-docstrap if user did not specify their own layout or template\n                if (!(jsdocConfig.opts &&\n                    jsdocConfig.opts.template) || !(jsdocConfig.templates &&\n                    jsdocConfig.templates.default &&\n                    jsdocConfig.templates.default.layoutFile)) {\n                    args = args.concat(['-t', inkdocstrap]);\n                }\n\n                args = args.concat(files);\n\n                debug(cmd + ' ' + args.join(' '));\n\n                const child = os === 'Windows_NT'\n                    ? spawn(process.execPath, [cmd].concat(args), {cwd: process.cwd()})\n                    : spawn(cmd, args, {cwd: process.cwd()}); // unix\n                child.stdout.setEncoding('utf8');\n                child.stderr.setEncoding('utf8');\n                child.stdout.on('data', function (data) {\n                    gutil.log(data);\n                });\n                child.stderr.on('data', function (data) {\n                    gutil.log(gutil.colors.red(data));\n                    gutil.beep();\n                });\n                child.on('close', function (code) {\n                    if (code === 0) {\n                        gutil.log('Documented ' + files.length + ' files!');\n                        resolve();\n                    } else {\n                        gutil.log(gutil.colors.red('JSDoc returned with error code: ' + code));\n                        gutil.beep();\n                        reject(new Error('JSDoc closed with error code: ' + code));\n                    }\n                });\n                child.on('error', function (error) {\n                    gutil.log(gutil.colors.red('JSDoc Error: ' + error));\n                    gutil.beep();\n                    reject(new Error(error));\n                });\n            });\n        }).asCallback(done);\n    });\n}\n"],"sourceRoot":"/source/"}